if(process.env.NODE_ENV !== 'production') {
    require('dotenv').config()
}

const express = require('express')
const session = require('express-session')
const passport = require('passport')
const path = require('path')
const cookie_parser = require('cookie-parser')

const MongoStore = require('connect-mongo')

const app = express()
app.use(express.urlencoded({extended: true}))
app.use(express.json())
app.use(cookie_parser())

app.push_cookie_array = require('./services/push_cookie_array')
app.locals.dictionary = require('./static/dictionary')
app.locals.category_dictionary = require('./static/category_dictionary')

const db_url = process.env.DATABASE_URL || 'mongodb://localhost/sajt'

if(process.env.NODE_ENV === 'production' ) {
    app.use(session({
        secret: process.env.SECRET,
        resave: false,
        saveUninitialized: true,
        store: MongoStore.create({ 
            mongoUrl: db_url, 
            collectionName: 'sessions_admin'
        }), // MAJD TÖRÖLNI A DB-S MEGOLDÁST ITT
        cookie: {
          maxAge: 1000 * 60 * 60 * 24
        },
        name: 'admin.connect.sid.YZAZCZ'
    }))
  }
  
if(process.env.NODE_ENV === 'development' ) {
    app.use(session({
        secret: process.env.SECRET,
        resave: false,
        saveUninitialized: true,
        store: MongoStore.create({ 
            mongoUrl: db_url, 
            collectionName: 'sessions_admin'
        }),
        cookie: {
            maxAge: 1000 * 60 * 60 * 24
        },
        name: 'admin.connect.sid.YZAZCZ'
    }))
}

require('./config/passport')

app.use(passport.initialize())
app.use(passport.session())

require('./routes/router')(app)

app.use(express.static('./src/static'))

const send_email = require('./services/send_email')

app.use((err, req, res, next) =>  {
    console.log('_-_-_-_ERROR MW_-_-_-_')

    try {
        const now = new Date()
        let errstack = 'ERROR STACK UNDEFINED'
        if (typeof err.stack !== 'undefined'){
            errstack = err.stack
        }
        let html = 
        `
        <html>
        <head>
        </head>
        <body>
        ERROR<br>
        ---------------------------------------<br>
        ${err}<br>
        ---------------------------------------<br>
        ${errstack}
        </body>
        </html>
        `

        res.status(500).send(html)
        
        if (process.env.NODE_ENV === 'production') {
            send_email(
                'kalmanbendeguz@gmail.com',
                `ADMIN APP ERROR ${now.toISOString()}`,
                html
            )
        }

    } catch (e) {
        const now1 = new Date()
        if (process.env.NODE_ENV === 'production') {
            send_email(
                'kalmanbendeguz@gmail.com',
                `ADMIN APP CRASHED ${now1.toISOString()}`,
                JSON.stringify(e)
            )
        }
    }
    
})

app.set('views', path.join(__dirname, '/views'))
app.set('view engine', 'ejs')

const server_url = process.env.SERVER_URL || `http://localhost:3002`
const node_env = process.env.NODE_ENV || `development`
const server_port = process.env.SERVER_PORT || 3002

console.log(`DB_URL: ${db_url}`)
console.log(`SERVER_URL: ${server_url}`)
console.log(`SERVER_PORT: ${server_port}`)
console.log(`NODE_ENV: ${node_env}`)

app.listen(server_port, () => {
    console.log(`"admin" app listening on port: ${server_port}`)
})

