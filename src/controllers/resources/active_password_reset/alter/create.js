const create = async (content, actor, session) => {

    // Model
    const Model = require('../../../../models/Active_Password_Reset')
    
    // Other controllers
    const user = require('../../user')

    // Check dependencies
    // Dependencies: [Active_Password_Reset, User]
    // Provided user_id should belong to an existing User.
    const user_of_active_password_reset = await user.alter_find_one(
        { filter: { _id: content.user_id.toString() } },
        actor,
        session
    )

    if (!user_of_active_password_reset) {
        throw {
            type: 'check_dependency_error',
            details: {
                resource: 'active_password_reset',
                method: 'create',
                user_id: content.user_id.toString(),
                error: 'provided_user_id_does_not_belong_to_an_existing_user'
            }
        }
    }

    // Generate locally
    const randomstring = require('randomstring')

    let restore_id
    do {
        restore_id = randomstring.generate({
            length: 32,
            charset: 'alphanumeric',
            capitalization: 'lowercase',
        })
    } while (
        (await Model.exists({
            restore_id: restore_id,
        }, { session: session }))
    )

    // Construct document
    const document = new Model({
        user_id: content.user_id,
        restore_id: restore_id,
        // expiring_started is autogenerated by model
    })

    // Validate created document
    const validator = require('../../../../validators/schemas/models/Active_Password_Reset')
    try {
        await validator.validateAsync(document)
    } catch (error) {
        throw {
            type: 'validate_document_error',
            details: {
                resource: 'active_password_reset',
                method: 'create',
                error: error.details
            }
        }
    }

    // Save created document
    const created_document = await document.save({ session: session })

    // Update dependents
    // Active_Password_Reset has no dependents.

    // Return
    return created_document
}

module.exports = create